- in the first case we have a global variable x which contains a value x=9, then we call a function f1 which takes a parameter as a value and returns a value, x variable is not changed inside the function , and we do not store the result of the function calling in a variable so we lost it,when we print the value of x after the function calling, it will keep the same value x=9

- in the second case we have a global variable y which contains an object { x: 9 }, then we call a function f2 which takes a parameter as an object and returns a object, y is not changed explicitly inside the function, but when we call the function and pass y as argument to the function, the global variable y will be changed because the object is a reference not a value,so the global variable y and the function parameneter will point to the same object (same location in the memory which contain the value of object), and any change to one of them will change the other
